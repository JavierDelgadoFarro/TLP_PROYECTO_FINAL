 -----USUARIO
/******************REGISTRAR USUARIO********************************/
CREATE PROCEDURE [dbo].[SP_RegistrarUsuario](
	 @nombres VARCHAR(100),
	 @apellidos VARCHAR(100),
	 @correo VARCHAR(100),
	 @clave VARCHAR(150),
	 @estado BIT,
	 @mensaje VARCHAR(200) OUTPUT,
	 @resultado INT OUTPUT
 )
 AS
 BEGIN
	SET @resultado = 0
	IF NOT EXISTS (SELECT * FROM Usuario WHERE Usu_correo = @correo)
	BEGIN
		INSERT INTO Usuario (Usu_nombres, Usu_apellidos, Usu_correo, Usu_password, Usu_estado) 
		VALUES (@nombres, @apellidos, @correo, @clave, @estado)
		SET @resultado = SCOPE_IDENTITY()
	END
	ELSE
		SET @mensaje = 'El correo del usuario ya existe'
 END

/******************EDITAR USUARIO*************************************/
CREATE PROCEDURE [dbo].[SP_EditarUsuario](
	 @idUsuario INT,
	 @nombres VARCHAR(100),
	 @apellidos VARCHAR(100),
	 @correo VARCHAR(100),
	 @estado BIT,
	 @mensaje VARCHAR(200) OUTPUT,
	 @resultado BIT OUTPUT
 )
 AS
 BEGIN
	SET @resultado = 0
	IF NOT EXISTS (SELECT * FROM Usuario WHERE Usu_correo = @correo AND idUsuario != @idUsuario)
	BEGIN
		UPDATE TOP (1) Usuario SET 
		Usu_nombres = @nombres, 
		Usu_apellidos = @apellidos, 
		Usu_correo = @correo,
		Usu_estado = @estado
		WHERE idUsuario = @idUsuario
		
		SET @resultado = 1
	END
	ELSE
		SET @mensaje = 'El correo del usuario ya existe'
 END

/******************LISTAR USUARIO*************************************/
CREATE PROCEDURE [dbo].[SP_ListarUsuario]
 AS 
 BEGIN
select idUsuario,Usu_nombres,Usu_apellidos,Usu_correo,Usu_password,Usu_reestablecer,Usu_estado from Usuario  
where Usu_estado = 1
END


/******************ELIMINAR USUARIO*************************************/

CREATE PROCEDURE [dbo].[SP_EliminarUsuario](

@IdUsuario int,
@Mensaje varchar(500) output,
@Resultado int output
)
AS
BEGIN
	SET @Resultado=0
	SELECT * FROM Usuario WHERE idUsuario = @IdUsuario
	BEGIN
		DELETE TOP (1) FROM Usuario WHERE idUsuario = @IdUsuario
		SET @Resultado =1
	END
END

---CATEGORIA

/******************REGISTRAR CATEGORIA*************************************/
CREATE PROCEDURE [dbo].[SP_RegistrarCategoria](
@Descripcion varchar(100),
@Activo bit,
@Mensaje varchar(500) output,
@Resultado int output
)
AS
BEGIN
	SET @Resultado=0
	IF NOT EXISTS (SELECT * FROM CATEGORIA WHERE Cat_Descripcion = @Descripcion)
	BEGIN
		INSERT INTO CATEGORIA(Cat_Descripcion,Cat_estado) values
		(@Descripcion, @Activo)
		
		SET @Resultado = scope_identity()
	END
	ELSE
	SET @Mensaje = 'La categoría ya existe'
END

/******************EDITAR CATEGORIA*************************************/

CREATE PROCEDURE [dbo].[SP_EditarCategoria](
@IdCategoria int,
@Descripcion varchar(100),
@Activo bit,
@Mensaje varchar(500) output,
@Resultado int output
)
AS
BEGIN
	SET @Resultado=0
	IF NOT EXISTS (SELECT * FROM CATEGORIA WHERE Cat_Descripcion = @Descripcion AND idCategoria != @IdCategoria)
	BEGIN
		UPDATE top (1) CATEGORIA SET
		Cat_descripcion = @Descripcion,
		Cat_estado = @Activo
		WHERE idCategoria = @IdCategoria
		SET @Resultado = 1
	END
	ELSE
	SET @Mensaje = 'La categoría ya existe'
END
/******************ELIMINAR CATEGORIA*************************************/
CREATE PROCEDURE [dbo].[SP_EliminarCategoria](
@IdCategoria int,
@Mensaje varchar(500) output,
@Resultado int output
)
AS
BEGIN
	SET @Resultado=0
	IF NOT EXISTS (SELECT * FROM PRODUCTO P
	INNER JOIN CATEGORIA C ON C.idCategoria = P.idCategoria
	
	WHERE P.IdCategoria = @IdCategoria)
	BEGIN
		DELETE TOP (1) FROM Categoria WHERE idCategoria = @IdCategoria
		SET @Resultado =1
	END
	ELSE
	SET @Mensaje = 'La categoría se encuentra relacionada a un producto'
END
/******************LISTAR CATEGORIA*************************************/
CREATE PROCEDURE [dbo].[SP_ListarCategoria]
 AS 
 BEGIN
select idCategoria,Cat_descripcion,Cat_estado from Categoria  
where Cat_estado = 1
END


/******************REGISTRAR MARCA*************************************/

CREATE PROCEDURE [dbo].[SP_RegistrarMarca](
@Descripcion varchar(100),
@Activo bit,
@Mensaje varchar(500) output,
@Resultado int output
)
AS
BEGIN
	SET @Resultado=0
	IF NOT EXISTS (SELECT * FROM MARCA WHERE Mar_descripcion = @Descripcion)
	BEGIN
		INSERT INTO MARCA(Mar_descripcion,Mar_estado) values
		(@Descripcion, @Activo)
		
		SET @Resultado = scope_identity()
	END
	ELSE
	SET @Mensaje = 'La marca ya existe'
END

/******************EDITAR MARCA*************************************/

CREATE PROCEDURE [dbo].[SP_EditarMarca](
@IdMarca int,
@Descripcion varchar(100),
@Activo bit,
@Mensaje varchar(500) output,
@Resultado int output
)
AS
BEGIN
	SET @Resultado=0
	IF NOT EXISTS (SELECT * FROM Marca WHERE Mar_descripcion = @Descripcion AND idMarca != @IdMarca)
	BEGIN
		UPDATE top (1) MARCA SET
		Mar_descripcion = @Descripcion,
		Mar_estado = @Activo
		WHERE idMarca = @idMarca
		SET @Resultado = 1
	END
	ELSE
	SET @Mensaje = 'La marca ya existe'
END

/******************ELIMINAR MARCA*************************************/
CREATE PROCEDURE [dbo].[SP_EliminarMarca](
@IdMarca int,
@Mensaje varchar(500) output,
@Resultado int output
)
AS
BEGIN
	SET @Resultado=0
	IF NOT EXISTS (SELECT * FROM PRODUCTO P
	INNER JOIN MARCA M ON M.idMarca = P.idMarca
	
	WHERE P.idMarca = @IdMarca)
	BEGIN
		DELETE TOP (1) FROM MARCA WHERE idMarca = @IdMarca
		SET @Resultado =1
	END
	ELSE
	SET @Mensaje = 'La marca se encuentra relacionada a un producto'
END

/******************LISTAR MARCA*************************************/
CREATE PROCEDURE [dbo].[SP_ListarMarca]
 AS 
 BEGIN
select idMarca,Mar_descripcion,Mar_estado from Marca  
where Mar_estado = 1
END

/******************REGISTRAR PRODUCTO*************************************/

CREATE PROCEDURE SP_RegistrarProducto(
@Nombre varchar(100),
@Descripcion varchar (100),
@IdMarca varchar(100),
@IdCategoria varchar (100),
@Precio decimal(10,2),
@Stock int,
@Activo bit,
@Mensaje varchar(500) output,
@Resultado int output
)
AS
BEGIN
	SET @Resultado =0
	IF NOT EXISTS ( SELECT*FROM Producto WHERE Prod_nombre = @Nombre)
	BEGIN
		INSERT INTO Producto(Prod_nombre, Prod_descripcion, Prod_idMarca, Prod_idCategoria, Prod_precio, Prod_stock, Prod_estado) VALUES
		(@Nombre,@Descripcion,@IdMarca,@IdCategoria,@Precio,@Stock,@Activo)
		SET @Resultado = SCOPE_IDENTITY()
	END
	ELSE
	SET @Mensaje = 'El Producto ya existe'
END

/******************EDITAR PRODUCTO*************************************/

CREATE PROCEDURE SP_EditarProducto(
@IdProducto int,
@Nombre varchar(100),
@Descripcion varchar (100),
@IdMarca varchar(100),
@IdCategoria varchar (100),
@Precio decimal(10,2),
@Stock int,
@Activo bit,
@Mensaje varchar(500) output,
@Resultado int output
)
AS
BEGIN
	SET @Resultado =0
	IF NOT EXISTS ( SELECT*FROM Producto WHERE Prod_nombre = @Nombre AND idProducto != @IdProducto)
	BEGIN
		UPDATE Producto SET 
		@Nombre = Prod_nombre, 
		@Descripcion = Prod_descripcion, 
		@IdMarca = Prod_idMarca, 
		@IdCategoria = Prod_idCategoria, 
		@Precio = Prod_precio, 
		@Stock = Prod_stock, 
		@Activo = Prod_estado
		WHERE idProducto = @IdProducto

		SET @Resultado = 1
	END
	ELSE
	SET @Mensaje = 'El Producto ya existe'
END


/******************ELIMINAR PRODUCTO*************************************/

CREATE PROCEDURE [dbo].[SP_EliminarProducto](
@IdProducto int,
@Mensaje varchar(500) output,
@Resultado int output
)
AS
BEGIN
	SET @Resultado=0
	IF NOT EXISTS (SELECT * FROM DetalleVenta DV
	INNER JOIN Producto P ON P.idProducto = DV.idProducto
	
	WHERE P.idProducto = @IdProducto)
	BEGIN
		DELETE TOP (1) FROM PRODUCTO WHERE idProducto = @IdProducto
		SET @Resultado =1
	END
	ELSE
	SET @Mensaje = 'El Producto se encuentra relacionado a una venta'
END


/******************LISTAR PRODUCTO*************************************/

CREATE PROCEDURE [dbo].[SP_ListarProducto]
 AS 
 BEGIN
select P.idProducto,P.Prod_nombre,P.Prod_descripcion, m.idMarca,
m.Mar_descripcion[DesMarca],
c.idCategoria, c.Cat_descripcion[DesCategoria],
P.Prod_precio, p.Prod_stock, p.Prod_rutaImagen, P.Prod_nombreImagen, P.Prod_estado
from Producto P
INNER JOIN Marca m ON m.idMarca = p.Prod_idMarca
INNER JOIN Categoria C ON C.idCategoria = P.Prod_idCategoria
WHERE Prod_estado =1
END

/******************REGISTRAR IMAGEN PRODUCTO*************************************/

CREATE PROCEDURE SP_RegistrarImagen
(
@IdProducto int,
@Rutaimagen varchar(500) output,
@Nombreimagen int output
)
AS
BEGIN
UPDATE Producto SET Prod_rutaImagen= @Rutaimagen, Prod_nombreImagen= @Nombreimagen
WHERE idProducto = @IdProducto
END



/******************REPORTE VENTAS*************************************/
ALTER PROC [dbo].[SP_ReporteVentas](
@fechainicio varchar(10),
@fechafin varchar(10),
@Idtransaccion varchar(50)
)
AS
BEGIN
	set dateformat dmy;

SELECT CONVERT(char(10),v.Ven_fechaVenta,103)[FechaVenta],CONCAT (c.Cli_nombres,' ',c.Cli_apellidos)[Cliente],
p.Prod_nombre[Producto], p.Prod_precio,dv.DV_Cantidad,dv.DV_Total,v.idTransaccion
FROM DetalleVenta dv 
INNER JOIN Producto p on p.idProducto=dv.idProducto
INNER JOIN venta v on v.idVenta=dv.idVenta
INNER JOIN Cliente c on c.idCliente=v.idCliente

WHERE CONVERT(date,v.Ven_fechaVenta) BETWEEN @fechainicio AND @fechafin
AND v.idTransaccion = iif(@Idtransaccion = '', v.idTransaccion,@Idtransaccion)
END

/******************CAMBIAR CONTRASEÑA*************************************/

CREATE PROC [dbo].[SP_CambiarContraseña](
	 @id INT,
	 @nuevaclave VARCHAR(100),
	 @resultado BIT OUTPUT,
	 @Mensaje varchar(500) output
 )
 AS
 BEGIN
	SET @resultado = 0
	BEGIN
		UPDATE TOP (1) Usuario SET 
		Usu_password = @nuevaclave,
		Usu_reestablecer =0
		WHERE idUsuario = @id
	END	
		SET @resultado = 1
END

/******************REGISTRAR CLIENTE*************************************/
CREATE PROCEDURE SP_RegistrarCliente(
@Nombres varchar(100),
@Apellido varchar(100),
@Correo varchar(100),
@Clave varchar(100),
@Mensaje varchar(500) output,
@Resultado int output
)
AS
BEGIN
	SET @Resultado =0
	IF NOT EXISTS (SELECT*FROM Cliente WHERE Cli_correo = @Correo)
	BEGIN
		INSERT INTO Cliente(Cli_nombres, Cli_apellidos, Cli_correo, Cli_password, Cli_reestablecer) values
		(@Nombres, @Apellido, @Correo, @Clave, 1)
		SET @Resultado = SCOPE_IDENTITY()
	END
	ELSE
	SET @Mensaje = 'El correo del cliente ya existe'
END

/******************LISTAR CLIENTE*************************************/

 CREATE PROC SP_ListarCliente
 AS 
 BEGIN
select idCliente,Cli_nombres,Cli_apellidos,Cli_correo,Cli_password,Cli_reestablecer from Cliente  
END

/******************EDITAR CLIENTE*************************************/


CREATE PROC [dbo].[SP_EditarCLiente](
	 @idCliente INT,
	 @nombres VARCHAR(100),
	 @apellidos VARCHAR(100),
	 @correo VARCHAR(100),
	 @mensaje VARCHAR(200) OUTPUT,
	 @resultado BIT OUTPUT
 )
 AS
 BEGIN
	SET @resultado = 0
	IF NOT EXISTS (SELECT * FROM Cliente WHERE Cli_correo = @correo AND idCliente != @idCliente)
	BEGIN
		UPDATE TOP (1) Cliente SET 
		Cli_nombres = @nombres, 
		Cli_apellidos = @apellidos, 
		Cli_correo = @correo
		WHERE idCliente = @idCliente
		
		SET @resultado = 1
	END
	ELSE
		SET @mensaje = 'El correo del cliente ya existe'
 END


/******************ELIMINAR CLIENTE*************************************/

 CREATE PROC [dbo].[SP_EliminarCliente](

@IdCliente int,
@Mensaje varchar(500) output,
@Resultado int output
)
AS
BEGIN
	SET @Resultado=0
	SELECT * FROM Cliente WHERE idCliente = @IdCliente
	BEGIN
		DELETE TOP (1) FROM Usuario WHERE @IdCliente = @IdCliente
		SET @Resultado =1
	END
END

---------------------nuevos

/******************REPORTE COUNT DE CLIENTES VENTAS Y PRODUCTOS (volver a correr)*************************************/

CREATE PROCEDURE SP_ReporteDashboard
AS
BEGIN
SELECT
	(SELECT COUNT(*) FROM cliente)[TotalCliente],
	(SELECT ISNULL(sum(DV_Cantidad),0) from DetalleVenta) [TotalVenta],
	(SELECT COUNT (*) FROM PRODUCTO WHERE Producto.Prod_estado = 1)[TotalProducto] 
END

/******************LISTAR MARCAS POR CATEGORIA*************************************/


CREATE PROCEDURE SP_ListarMarcaCategoria(
 @idCategoria INT
)
AS
BEGIN

SELECT DISTINCT m.idMarca, m.Mar_descripcion from Producto P
INNER JOIN Categoria C ON C.idCategoria = P.Prod_idCategoria
INNER JOIN Marca M ON M.idMarca = P.Prod_idMarca AND m.Mar_estado=1
WHERE C.idCategoria = IIF(@idCategoria = 0, C.idCategoria, @idCategoria)
END

/******************VERIFICACION DE PRODUCTO EN CARRITO*************************************/

ALTER PROC SP_ExisteCarrito(
@IdCliente int,
@IdProducto int,
@Resultado BIT OUTPUT
)
AS
BEGIN
	IF EXISTS (SELECT * FROM Carrito WHERE Car_idCliente = @IdCliente AND Car_idProducto = @IdProducto)
			SET @Resultado = 1
	ELSE
		SET @Resultado = 0
END


/*AÑADIR AL CARRITO/*

CREATE PROCEDURE SP_OperacionCarrito(
@IdCliente int,
@IdProducto int,
@Sumar BIT,
@Mensaje varchar(500) output,
@Resultado BIT OUTPUT
)
AS
BEGIN
	SET @Resultado = 1
	SET @Mensaje = ''

	DECLARE @existecarrito BIT = IIF (EXISTS(SELECT * FROM carrito WHERE Car_idCliente = @IdCliente AND Car_idProducto = @IdProducto),1,0)
	DECLARE @stockproducto INT = (SELECT Prod_stock FROM Producto WHERE idProducto = @IdProducto)

	BEGIN TRY

	BEGIN TRANSACTION OPERACION
		IF (@Sumar = 1)
		BEGIN 
			IF (@stockproducto > 0)
				BEGIN
				IF (@existecarrito = 1)
					UPDATE carrito SET Car_cantidad = Car_cantidad +1 WHERE Car_idCliente = @IdCliente AND Car_idProducto = @IdProducto
				ELSE
					INSERT INTO Carrito(Car_idCliente, Car_idProducto, Car_cantidad) VALUES (@IdCliente, @IdProducto, 1)
				UPDATE Producto SET Prod_stock = Prod_stock -1 WHERE idProducto = @IdProducto
				END
			ELSE
				BEGIN
					SET @Resultado =0
					SET @Mensaje = 'El producto no cuenta con stock suficiente'
				END
		END
		ELSE
		BEGIN
			UPDATE Carrito SET Car_cantidad = Car_cantidad -1 WHERE Car_idCliente = @IdCliente AND Car_idProducto = @IdProducto
			UPDATE Producto SET Prod_stock = Prod_stock +1 WHERE idProducto = @IdProducto
		END
		COMMIT TRANSACTION OPERACION
	END TRY
	BEGIN CATCH
		SET @Resultado =0
		SET @Mensaje = ERROR_MESSAGE()
		ROLLBACK TRANSACTION OPERACION
	END CATCH
END




CREATE PROC SP_eliminarCarrito(
@IdCliente int,
@IdProducto int,
@Resultado bit output
)
AS
BEGIN
	SET @Resultado =1
	DECLARE @cantidadproducto int = (select Car_cantidad from Carrito where Car_idCliente = @IdCliente AND Car_idProducto = @IdProducto)
	BEGIN TRY
		BEGIN TRANSACTION OPERACION
		UPDATE Producto SET Prod_stock = Prod_stock + @cantidadproducto WHERE idProducto = @IdProducto
		DELETE TOP (1) FROM Carrito WHERE Car_idCliente = @IdCliente AND Car_idProducto = @IdProducto
		COMMIT TRANSACTION OPERACION
	END TRY
	BEGIN CATCH
		SET @Resultado =0
		ROLLBACK TRANSACTION OPERACION
	END CATCH
END



CREATE FUNCTION Fn_ObtenerCarritoCliente(
@idcliente int
)
returns table
AS
RETURN(
	SELECT  p.idProducto, m.Mar_descripcion[DesMarca], p.Prod_nombre, p.Prod_precio, c.Car_cantidad, p.Prod_rutaImagen, p.Prod_nombreImagen
	FROM Carrito C
	INNER JOIN Producto P  ON P.idProducto = c.Car_idProducto
	INNER JOIN Marca M ON M.idMarca = p.Prod_idMarca
	WHERE c.Car_idCliente = @idcliente
)